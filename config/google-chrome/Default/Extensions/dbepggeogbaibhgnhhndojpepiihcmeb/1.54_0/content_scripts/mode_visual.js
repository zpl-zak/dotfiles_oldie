// Generated by CoffeeScript 1.8.0
(function() {
  var VisualMode, root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  VisualMode = (function(_super) {
    __extends(VisualMode, _super);

    function VisualMode(element) {
      if (element == null) {
        element = null;
      }
      VisualMode.__super__.constructor.call(this, element, null, {
        name: "visual",
        badge: "V",
        keydown: (function(_this) {
          return function(event) {
            return _this.suppressEvent;
          };
        })(this),
        keypress: (function(_this) {
          return function(event) {
            return _this.suppressEvent;
          };
        })(this),
        keyup: (function(_this) {
          return function(event) {
            return _this.suppressEvent;
          };
        })(this)
      });
    }

    return VisualMode;

  })(ConstrainedMode);

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.VisualMode = VisualMode;

}).call(this);
